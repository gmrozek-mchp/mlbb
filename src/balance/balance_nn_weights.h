// ******************************************************************
// Neural Network Weights and Biases
// Generated from trained Keras model
// ******************************************************************

#ifndef NN_WEIGHTS_H
#define NN_WEIGHTS_H

#include <stdint.h>
#include <arm_math_types.h>

// Network Architecture
#define NN_INPUT_SIZE 6
#define NN_HIDDEN_SIZE 12
#define NN_OUTPUT_SIZE 3

// dense_input weights (6x6)
static const float INPUT_WEIGHTS[] = {
    0.25622112f,    0.56882143f,    -0.31175333f,    -1.01942801f,
    -0.80491054f,    1.12609136f,    0.96613187f,    0.21129468f,
    -0.84273040f,    0.59080160f,    0.25154507f,    -0.79676580f,
    0.80954486f,    -0.19481467f,    -0.57651842f,    -0.26248938f,
    -0.65129626f,    0.33725354f,    0.70998269f,    -0.21211913f,
    -0.95092809f,    0.68617755f,    -0.51347357f,    -0.15449324f,
    -0.06785931f,    1.15931606f,    -0.50000668f,    1.05992126f,
    -0.69872117f,    -1.18378758f,    0.24490058f,    -0.79816657f,
    0.02416211f,    -0.56622016f,    -1.01901853f,    0.78399175f

};

// dense_input bias (6)
static const float INPUT_BIAS[] = {
    0.04598370f,    0.04711958f,    -0.02907668f,    0.01023033f,
    -0.01431593f,    0.02915636f
};

// dense_hidden weights (6x12)
static const float HIDDEN_WEIGHTS[] = {
    0.17922933f,    0.69572127f,    0.20539205f,    0.14200287f,
    -0.35573217f,    0.46993569f,    -0.28201571f,    0.19913721f,
    0.10849240f,    -0.48740199f,    -0.99238425f,    -0.04943401f,
    0.10377257f,    0.48640209f,    0.16736798f,    0.07508216f,
    -0.28313226f,    -0.33138999f,    -0.66407537f,    -0.57993287f,
    -0.20183864f,    0.14131001f,    -0.52866632f,    -0.32337067f,
    0.12070253f,    -0.47130188f,    -0.20245023f,    -0.13201381f,
    0.42347500f,    0.43804789f,    -0.07804925f,    -0.22867773f,
    0.05943699f,    -0.02251208f,    0.65691125f,    0.02480404f,
    -0.91822010f,    0.33380908f,    -1.03863120f,    -0.06107106f,
    0.24268129f,    -0.06738999f,    -0.98449039f,    -0.28299624f,
    0.51225460f,    0.43184865f,    -0.00405104f,    0.04337826f,
    -0.08336318f,    0.35306811f,    0.22984618f,    -0.13192023f,
    -0.54068029f,    -0.11839203f,    -0.50151211f,    -0.23172447f,
    -0.53848255f,    -0.46595395f,    0.83672649f,    -0.17092283f,
    0.78048480f,    -0.16819283f,    0.98947215f,    -0.37218750f,
    -0.29480258f,    -0.11412123f,    0.37350863f,    0.35407075f,
    0.45290437f,    -0.43230373f,    -0.17060862f,    -0.15939668f

};

// dense_hidden bias (12)
static const float HIDDEN_BIAS[] = {
    0.01438818f,    0.03129289f,    0.00107882f,    -0.10317837f,
    -0.00593472f,    -0.05520026f,    0.02145190f,    0.01438564f,
    0.02786027f,    -0.03677148f,    -0.05670576f,    -0.01087179f

};

// dense_output weights (12x3)
static const float OUTPUT_WEIGHTS[] = {
    -0.31585309f,    0.14319766f,    0.76285642f,    0.34556776f,
    -0.25592852f,    -0.44305298f,    -0.41093108f,    -0.48755544f,
    0.13288887f,    -0.18761024f,    0.20720099f,    0.05845821f,
    0.55044103f,    -0.11089414f,    0.62552756f,    0.13042460f,
    -0.48440510f,    0.30562946f,    1.23608923f,    0.28908601f,
    -1.58542883f,    -0.04982504f,    -0.59379929f,    0.23855570f,
    -0.15441413f,    0.45597333f,    0.44681045f,    -0.44389290f,
    -0.04486088f,    -0.26904777f,    -0.34816903f,    0.81685770f,
    -0.47320533f,    -0.18502478f,    0.25040749f,    0.57870084f

};

// dense_output bias (3)
static const float OUTPUT_BIAS[] = {
    0.00394069f,    0.02260816f,    -0.01742042f
};

// Neural Network Functions
void nn_forward(const float* input, float* output);
float nn_relu(float x);

#endif // NN_WEIGHTS_H
