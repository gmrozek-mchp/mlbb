// ******************************************************************
// Neural Network Weights and Biases
// Generated from trained Keras model
// ******************************************************************

#ifndef NN_WEIGHTS_H
#define NN_WEIGHTS_H

#include <stdint.h>
// ARM math types removed for compatibility

// Network Architecture
#define NN_INPUT_SIZE 4
#define NN_INPUT_OUTPUT_SIZE 4
#define NN_HIDDEN1_SIZE 24
#define NN_HIDDEN2_SIZE 12
#define NN_HIDDEN3_SIZE 8
#define NN_OUTPUT_SIZE 2

// dense_input weights (4x4)
static const float INPUT_WEIGHTS[] = {
    0.21372180f,    0.10619497f,    0.53871995f,    -0.08964897f,
    4.65955114f,    -0.03614381f,    -0.65519714f,    -0.69942290f,
    -0.00280586f,    -0.40608710f,    -0.00819413f,    0.29005000f,
    0.52445531f,    1.62333477f,    0.04395317f,    3.72019529f

};

// dense_input bias (4)
static const float INPUT_BIAS[] = {
    -4.20561361f,    -0.89620912f,    -4.94088316f,    8.49291420f

};

// dense_hidden1 weights (4x24)
static const float HIDDEN1_WEIGHTS[] = {
    0.79075408f,    -0.07983818f,    -0.15695190f,    -1.93222034f,
    0.06510095f,    -2.53384495f,    0.54008460f,    1.22753477f,
    0.89241326f,    -0.21114844f,    0.62821418f,    2.83815074f,
    1.03498948f,    2.72138381f,    -0.07726230f,    -0.43769535f,
    -0.01604414f,    -0.36230803f,    1.12677622f,    0.12639803f,
    -1.37802494f,    -1.62198424f,    0.55691916f,    0.07725752f,
    0.37606466f,    0.91401255f,    -0.26582244f,    -0.34907898f,
    0.38769019f,    -0.94886833f,    0.61955613f,    -1.47286224f,
    -0.15698482f,    0.36407548f,    -0.01673643f,    -0.45143172f,
    0.93453491f,    0.42191866f,    0.91016382f,    -0.21995552f,
    2.21470404f,    -1.44014490f,    -0.35773513f,    -3.01263332f,
    0.27670425f,    0.72241175f,    -0.59935296f,    -1.01244903f,
    0.26565027f,    0.57923031f,    -0.09677083f,    0.34663895f,
    2.94475722f,    0.94875896f,    0.44609934f,    0.53435445f,
    0.46832347f,    -0.29013449f,    0.45928249f,    -1.09589791f,
    -0.82816815f,    -0.33748347f,    -0.80573481f,    -0.86024803f,
    -1.95566368f,    -0.07727314f,    -0.16587637f,    -1.70308125f,
    -1.03262615f,    0.24060035f,    0.54154229f,    -1.10507143f,
    -0.09478232f,    -0.30321765f,    0.15470147f,    1.27504838f,
    0.05925205f,    -1.24173248f,    2.62238932f,    -0.54581392f,
    0.79485464f,    -0.22089423f,    -0.61416215f,    -0.63548571f,
    0.50168276f,    1.06518173f,    2.02815294f,    0.11042640f,
    -0.55055559f,    -3.28846669f,    -2.64712882f,    0.88269490f,
    -1.10673678f,    1.20758533f,    1.13644898f,    0.39922696f

};

// dense_hidden1 bias (24)
static const float HIDDEN1_BIAS[] = {
    -39.25661087f,    42.93781281f,    44.78528595f,    -30.76773453f,
    49.77991867f,    -30.29780579f,    -0.23757474f,    -50.09703445f,
    2.16228890f,    45.19995880f,    43.64553452f,    -26.85955811f,
    -47.00720978f,    -37.56655502f,    -33.49746323f,    14.38899517f,
    51.74383926f,    -17.84314537f,    -20.28482056f,    46.51622009f,
    -0.07412974f,    -41.65997314f,    29.93071365f,    44.46105194f

};

// dense_hidden2 weights (24x12)
static const float HIDDEN2_WEIGHTS[] = {
    -0.44863594f,    0.53061312f,    0.10356764f,    -3.02757335f,
    -0.14861195f,    0.52343714f,    -2.01808786f,    -0.54363984f,
    -0.40278637f,    -0.05248466f,    -1.14662611f,    0.47188264f,
    -0.68493778f,    0.88078046f,    1.53661931f,    0.62506759f,
    0.95264101f,    -0.22044766f,    0.46992859f,    -1.61665201f,
    -0.08268949f,    -0.22262371f,    -1.89151490f,    -4.16571569f,
    -1.04917216f,    3.35766888f,    -0.65150410f,    -1.04339719f,
    -1.49842215f,    0.00490089f,    -1.23836696f,    0.06595751f,
    -0.43533069f,    -0.42522815f,    -1.45023286f,    -2.62020326f,
    -0.50887370f,    -2.79515529f,    -2.09952259f,    -0.36095089f,
    -0.14736058f,    0.74691319f,    -1.14347196f,    -0.27965131f,
    0.14524390f,    -0.51654321f,    -0.31975317f,    0.71466839f,
    0.16791989f,    0.97061145f,    0.69858813f,    -0.31494477f,
    -3.82639265f,    0.19975859f,    0.54117638f,    0.02288864f,
    -0.28008667f,    -0.69568878f,    0.80439621f,    -11.17811680f,
    0.38206968f,    0.79913366f,    0.66878778f,    0.85823172f,
    1.21980536f,    -1.05784881f,    1.60548472f,    1.49872804f,
    -0.41248912f,    -0.09960943f,    1.57216871f,    1.09236395f,
    -0.27946708f,    -1.06062579f,    0.07382030f,    -2.32542896f,
    -2.39243793f,    0.28113747f,    0.34564638f,    1.30336034f,
    -0.06040898f,    -0.35870340f,    -0.05505246f,    0.70549256f,
    -5.79437923f,    -1.08012879f,    0.53165662f,    0.82386684f,
    -1.64666557f,    -5.03142977f,    0.54402572f,    -1.25480449f,
    0.02553799f,    0.00087810f,    -1.34309149f,    1.38940847f,
    -0.45473605f,    0.07357658f,    0.28960833f,    -6.67734814f,
    0.20475024f,    -0.15826933f,    0.48203796f,    -0.24062191f,
    -0.45385051f,    -0.67893076f,    0.69758588f,    -0.48330867f,
    -2.36096835f,    -0.83460754f,    1.09309161f,    -0.78907400f,
    -4.38706589f,    -0.75739747f,    -3.18554401f,    -0.16807444f,
    0.11737999f,    0.01214331f,    0.68966812f,    -2.99339008f,
    -3.88392520f,    -0.44413501f,    -0.19113965f,    -2.01717949f,
    -5.06253147f,    2.70896482f,    0.79391110f,    1.55071270f,
    -0.25098872f,    -0.04257476f,    0.69309336f,    -1.99965298f,
    1.90747762f,    2.70123005f,    1.44256628f,    0.41664159f,
    1.26687884f,    0.85063714f,    1.88915288f,    1.04634738f,
    -0.18441103f,    -0.29138112f,    1.31041694f,    0.49358416f,
    -5.25955868f,    -0.23548307f,    0.53822213f,    -4.63183689f,
    1.29301512f,    0.86061710f,    -0.22501104f,    -0.48381642f,
    -0.26008996f,    -0.21157314f,    -0.69896394f,    0.87837547f,
    -7.92788410f,    0.50586373f,    -1.62811744f,    2.66871715f,
    0.79359305f,    1.05731690f,    -1.47036934f,    -1.38511276f,
    0.03984287f,    -0.59484339f,    -1.38746977f,    0.65192091f,
    1.66518867f,    1.25241697f,    -1.62957191f,    -10.33758450f,
    -0.10221987f,    0.90634221f,    2.03038526f,    0.11321550f,
    -0.55937880f,    -0.66930532f,    0.30760911f,    0.73483652f,
    1.85373259f,    0.17966668f,    0.53633177f,    0.35119578f,
    -1.27517855f,    0.80182731f,    -1.29826486f,    0.12343648f,
    0.05278627f,    -0.52873629f,    0.49494916f,    0.00097270f,
    0.30290544f,    -0.56004822f,    -0.34928188f,    0.69082457f,
    -2.02709198f,    -0.89529407f,    -1.15033162f,    0.27667379f,
    -0.02145275f,    -0.39225459f,    0.68994564f,    -10.93398094f,
    1.33527565f,    -0.83617175f,    -0.92820483f,    0.81905645f,
    -3.58536649f,    -4.37545109f,    -2.34431458f,    -2.57014561f,
    -0.34546545f,    -0.60038561f,    -1.17206931f,    0.50637883f,
    -0.73515821f,    0.51608968f,    1.04139566f,    0.46270519f,
    -0.56807786f,    -3.07365036f,    -0.28558600f,    -1.02802682f,
    -0.54676688f,    -0.48296696f,    0.03461028f,    0.25644284f,
    -0.56203902f,    0.02324334f,    -0.45796746f,    -0.39655355f,
    0.86042243f,    0.17550707f,    0.27352899f,    0.33643374f,
    -0.38357395f,    -0.39190671f,    0.06305725f,    -11.27326393f,
    -0.42131543f,    -0.23609927f,    0.40205890f,    0.04025888f,
    -0.08607960f,    -3.86001825f,    -0.37913856f,    -0.57026327f,
    -0.05462896f,    0.04464885f,    0.26913267f,    0.14366387f,
    1.30371141f,    -0.09840533f,    -1.63650072f,    -1.62406611f,
    -3.96639633f,    0.35194695f,    -1.89643276f,    0.64054155f,
    -0.35647240f,    -0.12807284f,    1.32430589f,    0.85698837f,
    -2.78270483f,    -0.22586080f,    -1.53921103f,    -1.71061528f,
    -1.57516944f,    -1.37510991f,    0.31672558f,    1.08429348f,
    -0.30439836f,    0.04503585f,    -1.24815238f,    -0.16125497f,
    0.08329270f,    -0.51771611f,    0.65885627f,    -1.04920578f,
    1.23263717f,    -0.68227118f,    -0.78406668f,    1.36526132f,
    -0.13585676f,    -0.40256140f,    1.67547405f,    -5.48401165f

};

// dense_hidden2 bias (12)
static const float HIDDEN2_BIAS[] = {
    -6.90395355f,    -3.72906756f,    15.39897823f,    -14.90550423f,
    -7.17296791f,    -6.76652431f,    22.71592522f,    13.44074440f,
    -1.02920341f,    -0.35373408f,    2.74849343f,    -64.99451447f

};

// dense_hidden3 weights (12x8)
static const float HIDDEN3_WEIGHTS[] = {
    0.39634681f,    0.79110831f,    -0.84064537f,    -1.61685586f,
    -0.95684177f,    0.79467160f,    -0.15652381f,    0.73343998f,
    -0.16520751f,    -0.51741934f,    -7.98878098f,    -1.33334899f,
    0.68597925f,    -0.60507017f,    -0.07597499f,    -0.56762677f,
    0.81520504f,    -1.59470415f,    -0.41425410f,    -4.31474924f,
    -0.29438445f,    -0.13427007f,    -0.40433761f,    0.54054314f,
    0.16352902f,    -1.09302163f,    0.55538619f,    -0.01663869f,
    0.82612610f,    -0.65519404f,    -4.17853260f,    1.03318322f,
    -0.01224271f,    0.56547225f,    0.26935875f,    0.93140262f,
    1.28668427f,    0.57643145f,    -5.15507984f,    -2.11390519f,
    -0.88954908f,    0.11198579f,    -1.09771872f,    0.79411882f,
    -0.17570475f,    0.73603284f,    0.57633156f,    -4.80306530f,
    -1.96904349f,    0.20533961f,    -0.66295046f,    0.09663114f,
    0.44577974f,    -0.21601845f,    0.93188566f,    -0.39702383f,
    -0.68966836f,    -0.33509210f,    -3.18444991f,    -0.89093250f,
    -2.03529167f,    0.56724888f,    0.45433480f,    -0.25642541f,
    0.06167279f,    -0.05680326f,    0.46188179f,    0.32409906f,
    0.18031053f,    0.09656274f,    -0.32276997f,    0.22575310f,
    0.26021320f,    0.06398885f,    0.19121371f,    -0.09323040f,
    -0.19165996f,    0.05873187f,    0.08570541f,    0.71341664f,
    -0.23202065f,    0.48103985f,    -1.67250693f,    -5.37750244f,
    -0.86940515f,    -0.07232338f,    -1.09441543f,    0.46300432f,
    -0.98845148f,    -0.84744167f,    -0.61967850f,    -0.67815030f,
    -2.03919673f,    -2.68529344f,    -2.74045539f,    -3.97537923f

};

// dense_hidden3 bias (8)
static const float HIDDEN3_BIAS[] = {
    -17.58720779f,    -23.79812241f,    3.10395026f,    -9.57632637f,
    -14.64198780f,    -15.66567326f,    11.75290298f,    10.91279697f

};

// dense_output weights (8x2)
static const float OUTPUT_WEIGHTS[] = {
    0.35969767f,    -0.69469517f,    -0.71247953f,    0.00780038f,
    -0.48021060f,    -1.40517437f,    0.12176313f,    1.61585307f,
    0.96713573f,    -0.00566565f,    -0.55848074f,    0.67744976f,
    0.68856549f,    0.60626686f,    -0.56866968f,    -0.48789668f

};

// dense_output bias (2)
static const float OUTPUT_BIAS[] = {
    -0.00099883f,    4.85407114f
};

// Neural Network Functions
void nn_forward(const float* input, float* output);
float nn_relu(float x);

#endif // NN_WEIGHTS_H
