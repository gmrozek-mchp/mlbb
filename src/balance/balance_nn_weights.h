// ******************************************************************
// Neural Network Weights and Biases
// Generated from trained Keras model
// ******************************************************************

#ifndef NN_WEIGHTS_H
#define NN_WEIGHTS_H

#include <stdint.h>
// ARM math types removed for compatibility

// Network Architecture
#define NN_INPUT_SIZE 4
#define NN_INPUT_OUTPUT_SIZE 4
#define NN_HIDDEN1_SIZE 12
#define NN_HIDDEN2_SIZE 6
#define NN_OUTPUT_SIZE 2

// dense_input weights (4x4)
static const float INPUT_WEIGHTS[] = {
    -0.10553136f,    0.06445216f,    0.29781762f,    -0.08380813f,
    0.56206286f,    1.31649065f,    4.45687294f,    -0.20838569f,
    -0.16548003f,    0.28020668f,    -0.10950857f,    -0.11765677f,
    0.41869107f,    4.10467339f,    -0.94676495f,    0.70129389f

};

// dense_input bias (4)
static const float INPUT_BIAS[] = {
    -56.04629135f,    -1.16637325f,    2.88708448f,    68.18235016f

};

// dense_hidden1 weights (4x12)
static const float HIDDEN1_WEIGHTS[] = {
    -1.17030430f,    0.79799372f,    -0.04563109f,    3.69378233f,
    1.77475977f,    -1.00443518f,    -2.16822052f,    0.49887189f,
    -0.75823879f,    -1.12155664f,    1.09632361f,    2.02526021f,
    -0.33344015f,    0.52170020f,    0.35336611f,    -0.31781071f,
    1.20121205f,    -0.29531175f,    0.26707542f,    -0.37662026f,
    -0.06327441f,    -1.14756358f,    1.33368766f,    -0.32515812f,
    0.44119543f,    0.45107850f,    1.42179167f,    -0.38083234f,
    0.87345940f,    0.04487572f,    0.08947641f,    -1.73101783f,
    -0.67192775f,    0.65337300f,    -0.77710581f,    -0.87738687f,
    3.37375498f,    2.50422668f,    -0.34422672f,    -1.88771892f,
    -3.47064352f,    -0.68597573f,    -0.35541278f,    -0.03952372f,
    -2.56793928f,    1.50958383f,    -1.57747948f,    -2.03484273f

};

// dense_hidden1 bias (12)
static const float HIDDEN1_BIAS[] = {
    52.85172653f,    34.76209259f,    -0.27168545f,    0.20111774f,
    -67.40109253f,    -17.16238403f,    20.46232986f,    -27.01642418f,
    32.68798065f,    -22.09640121f,    -19.74221420f,    5.04496479f

};

// dense_hidden2 weights (12x6)
static const float HIDDEN2_WEIGHTS[] = {
    1.40859306f,    2.61225343f,    3.17804694f,    2.89058566f,
    1.43538737f,    -0.95113522f,    0.34446782f,    2.19288182f,
    1.97224784f,    1.57887173f,    0.55115479f,    -2.66994977f,
    1.05448592f,    1.25493884f,    -0.54170650f,    0.64883631f,
    1.43837702f,    -0.18113588f,    -1.14913142f,    0.26616189f,
    0.63916045f,    -0.02758587f,    0.42441106f,    -9.78311348f,
    -3.83816910f,    -2.23782277f,    -1.69503200f,    -1.29059923f,
    -5.37424183f,    -0.12794928f,    -1.59542465f,    0.29057658f,
    1.50278378f,    -0.32675979f,    -1.43130875f,    0.82780087f,
    -0.00762634f,    1.68265390f,    2.13752270f,    1.56377840f,
    -1.12919879f,    -0.64346206f,    -1.23647165f,    -1.72632742f,
    0.31813341f,    -1.17845118f,    -1.72085130f,    0.19083518f,
    1.08799314f,    1.97830963f,    1.38316655f,    1.61273587f,
    3.01423168f,    -0.03582180f,    -1.54425895f,    -1.40791416f,
    -1.31682885f,    -0.63858616f,    -0.46101874f,    1.37958848f,
    1.33923614f,    -0.44520462f,    -1.21580625f,    -2.82349777f,
    -1.64966536f,    -0.10239384f,    -1.25414598f,    0.07118143f,
    -2.59876132f,    0.55785406f,    -0.56063920f,    -1.65684068f

};

// dense_hidden2 bias (6)
static const float HIDDEN2_BIAS[] = {
    16.89731407f,    18.10719681f,    31.36088943f,    20.75706100f,
    15.21644497f,    3.68675470f
};

// dense_output weights (6x2)
static const float OUTPUT_WEIGHTS[] = {
    -0.59224963f,    1.38354254f,    2.00055146f,    0.87910676f,
    -2.15055370f,    0.37599432f,    0.89419889f,    -1.22988081f,
    -0.81240565f,    -1.13556850f,    0.51484072f,    -3.54326844f

};

// dense_output bias (2)
static const float OUTPUT_BIAS[] = {
    -2.44280434f,    26.96641731f
};

// Neural Network Functions
void nn_forward(const float* input, float* output);
float nn_relu(float x);

#endif // NN_WEIGHTS_H
