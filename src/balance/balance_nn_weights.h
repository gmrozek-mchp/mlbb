// ******************************************************************
// Neural Network Weights and Biases
// Generated from trained Keras model for Ball Balancing Control
// ******************************************************************

#ifndef NN_WEIGHTS_H
#define NN_WEIGHTS_H

#include <stdint.h>

// Network Architecture
#define NN_INPUT_SIZE 3
#define NN_INPUT_OUTPUT_SIZE 3
#define NN_HIDDEN1_SIZE 24
#define NN_HIDDEN2_SIZE 12
#define NN_HIDDEN3_SIZE 8
#define NN_OUTPUT_SIZE 1

// dense_input weights (3x3)
static const float INPUT_WEIGHTS[] = {
    -0.44113511f,    0.00001170f,    0.00036642f,    -0.01474354f,
    -0.00051141f,    0.00012838f,    -5.88495302f,    0.00004600f,
    -0.00075216f
};

// dense_input bias (3)
static const float INPUT_BIAS[] = {
    -0.28372443f,    0.00222680f,    0.00614565f
};

// dense_hidden1 weights (3x24)
static const float HIDDEN1_WEIGHTS[] = {
    1.39677715f,    0.00068035f,    -0.00104721f,    0.00033373f,
    0.00026809f,    0.00040484f,    -0.88052970f,    -0.00144514f,
    0.00094903f,    0.00032036f,    0.00030542f,    0.00024582f,
    -0.00016650f,    -0.00021660f,    -0.00061432f,    0.00000903f,
    -0.00065029f,    0.00045957f,    -1.81089163f,    0.00025369f,
    -0.71170163f,    1.34907460f,    0.00011769f,    -0.00028073f,
    0.00149547f,    0.00860080f,    0.06384338f,    -0.04246659f,
    0.00235629f,    -0.05959308f,    -0.00228629f,    -0.01862862f,
    -0.05342999f,    -0.00318027f,    -0.00837655f,    -0.01287840f,
    0.04278725f,    0.00137781f,    0.01531928f,    -0.04461075f,
    -0.04472156f,    0.00638394f,    0.00120634f,    0.04276687f,
    0.00134479f,    -0.00145918f,    0.08642165f,    -0.01937408f,
    -0.00338130f,    0.05558643f,    -0.03881750f,    -0.08157759f,
    0.00684035f,    -0.01719042f,    0.00009085f,    -0.03609908f,
    -0.06946667f,    -0.06495943f,    0.06208615f,    0.00700730f,
    0.04927305f,    0.00002845f,    -0.00236236f,    0.00818433f,
    0.03368253f,    -0.00168644f,    -0.00153678f,    -0.00314573f,
    0.00115071f,    0.00309716f,    -0.03848818f,    -0.00168375f

};

// dense_hidden1 bias (24)
static const float HIDDEN1_BIAS[] = {
    -0.28757331f,    -16.90221596f,    -28.80576324f,    -22.71367455f,
    -4.82903004f,    -14.54851627f,    0.16978624f,    -20.22365952f,
    -23.04486275f,    -11.71672058f,    -20.61130142f,    -16.88549614f,
    -10.95455551f,    -4.73738003f,    -13.87143993f,    -14.33024883f,
    -24.28753662f,    -13.84883404f,    -0.73394889f,    -15.28850365f,
    -2.16810107f,    -1.04367590f,    -24.83203125f,    -13.47964382f

};

// dense_hidden2 weights (24x12)
static const float HIDDEN2_WEIGHTS[] = {
    -0.32694978f,    -1.34136009f,    -1.96421504f,    -0.44973481f,
    -0.25922191f,    0.92343640f,    0.06323218f,    -0.05612818f,
    -0.79018378f,    1.42736995f,    -0.21136960f,    -0.22878036f,
    0.30407828f,    -0.31020319f,    -0.03521887f,    -0.71133912f,
    0.44907668f,    -0.05918697f,    -1.01888096f,    -0.48157576f,
    0.02482868f,    0.02831432f,    0.01709666f,    -0.07600365f,
    -0.13794820f,    0.33806404f,    0.01936827f,    -0.66825634f,
    -0.06827454f,    -0.01893541f,    -0.13380317f,    -0.22053331f,
    -0.18844986f,    0.05444747f,    -0.41565025f,    -0.16073449f,
    -0.03454451f,    0.50834531f,    -0.00882118f,    -0.01636245f,
    -0.64535892f,    -0.02937486f,    0.12048004f,    0.16234656f,
    0.26348156f,    0.01299987f,    0.01940260f,    -0.01565061f,
    -0.76680434f,    -0.26017615f,    0.00374857f,    -0.35732546f,
    -0.89003521f,    -0.46888942f,    -0.65777624f,    -0.12810625f,
    -1.07463789f,    0.30154514f,    -0.69744265f,    0.09726565f,
    -0.61729676f,    -0.38794377f,    -0.00015519f,    -0.51326948f,
    -0.76979423f,    -0.26924276f,    -0.30888879f,    -0.06275705f,
    -0.19241872f,    0.22749434f,    -1.09689581f,    0.03661750f,
    -1.26474226f,    -0.36622280f,    0.81893182f,    0.08137109f,
    -1.10463703f,    -0.62612349f,    -0.54533929f,    -0.38739383f,
    -1.11710179f,    -2.31786752f,    -0.36370498f,    -0.23501430f,
    -1.20100462f,    -0.80511194f,    0.00094457f,    -0.10041243f,
    -0.95382708f,    -0.16946301f,    0.50511503f,    -0.11750955f,
    -0.33235502f,    0.09663025f,    -0.56310672f,    -0.60608107f,
    -0.01160116f,    -0.00132108f,    -0.02170223f,    -0.51182538f,
    0.17039089f,    0.02779955f,    -0.08990040f,    -0.03406307f,
    -0.05059806f,    -0.01864818f,    -0.19534430f,    -0.54029065f,
    -0.33345792f,    -0.31486654f,    -0.03301910f,    -0.46770281f,
    0.13562071f,    -0.39177424f,    -0.38540986f,    0.05573298f,
    -0.27124810f,    0.21376920f,    -0.50554955f,    -0.90960193f,
    -0.73390692f,    -0.23685741f,    -0.00826308f,    -0.26970929f,
    -0.36407536f,    -0.01982541f,    -0.10234439f,    0.14794649f,
    -0.35940361f,    0.02772689f,    -0.42572108f,    -0.20166883f,
    0.07215694f,    0.49068835f,    -0.00536402f,    -0.88066244f,
    -0.18174931f,    0.21267346f,    0.30062869f,    -0.28131071f,
    -0.00149209f,    -0.24126498f,    -0.55820107f,    -0.41802436f,
    -0.06993500f,    -0.99386936f,    -0.00056801f,    -0.09524328f,
    -0.52083236f,    -0.48064935f,    -0.21990812f,    -0.50868416f,
    -1.71085703f,    0.22608028f,    -0.22393571f,    -0.34496239f,
    -0.51622200f,    0.22482964f,    -0.10394568f,    0.07045283f,
    -0.02797002f,    0.25782260f,    -0.14615411f,    0.07492849f,
    -0.11111033f,    -0.20477097f,    -0.03752181f,    -0.72338402f,
    -0.39622417f,    0.01560636f,    -0.00411608f,    -0.75988013f,
    -0.22643694f,    0.14215834f,    -0.20035611f,    0.08412916f,
    -0.40647811f,    -0.11077729f,    -0.19918740f,    0.20552176f,
    -0.07046542f,    -0.15555152f,    0.00455254f,    -0.34577721f,
    -0.36413407f,    -0.07147598f,    -0.47588244f,    -0.04781835f,
    -0.10723910f,    0.03820807f,    0.17952363f,    -0.38443196f,
    -0.06891298f,    -0.02448263f,    0.00089747f,    0.12064106f,
    -0.57385546f,    0.05756621f,    -0.24145095f,    0.31003723f,
    -0.01862270f,    0.02109860f,    -0.22952864f,    -0.49913624f,
    -0.55645257f,    -0.36910799f,    0.04691254f,    -0.04586576f,
    0.10658843f,    0.15194125f,    -0.43609002f,    0.10683257f,
    -0.44539514f,    -0.11214864f,    -0.56009567f,    -0.50395215f,
    -1.02558815f,    0.20239851f,    1.63475728f,    0.03151020f,
    -1.01373506f,    -4.19013977f,    -0.33440572f,    -0.35786596f,
    -0.23463711f,    -3.05199051f,    -0.11574749f,    -1.12416089f,
    -0.18938681f,    0.19721313f,    -0.02230115f,    0.22960676f,
    0.00243985f,    0.34363654f,    -0.28697732f,    -0.20721139f,
    -0.15597297f,    -0.24295312f,    -0.32165298f,    -0.97473407f,
    -0.39764512f,    -0.64151490f,    0.63334906f,    -0.22059341f,
    -1.02951109f,    -1.23829556f,    -0.33296832f,    0.14302033f,
    -2.38502789f,    -0.89570743f,    -0.53083533f,    -1.03230262f,
    -0.10786115f,    -2.47066569f,    -2.27366257f,    -0.69831133f,
    -0.78240818f,    0.66778445f,    -0.75771964f,    -0.29907712f,
    -0.75069827f,    1.37874818f,    -0.00380971f,    -0.46976024f,
    -0.40578264f,    0.15936780f,    0.01836182f,    -0.21643920f,
    -0.12667763f,    -0.04279038f,    -0.91374713f,    -0.42621216f,
    -0.20281373f,    -0.00277268f,    -0.14453807f,    0.03728430f,
    -0.13445623f,    -0.36768264f,    0.15111928f,    -0.20678736f,
    0.07328822f,    0.14680734f,    -0.23512885f,    0.09836327f,
    -0.01297684f,    -0.11941364f,    0.39521322f,    -0.08078478f

};

// dense_hidden2 bias (12)
static const float HIDDEN2_BIAS[] = {
    -0.44099042f,    -2.56195545f,    -0.19395833f,    -1.55647314f,
    -0.66323793f,    -0.53220397f,    -1.59036267f,    -1.61549997f,
    -0.00832684f,    0.70312864f,    -0.32968566f,    -2.01685405f

};

// dense_hidden3 weights (12x8)
static const float HIDDEN3_WEIGHTS[] = {
    -0.97868317f,    -0.00394285f,    -0.20763351f,    -0.53760588f,
    0.13078287f,    -0.30076116f,    0.75210762f,    -0.34335136f,
    -0.03271582f,    -0.21930887f,    -0.74565196f,    0.01473022f,
    0.17307417f,    -0.06229298f,    -0.03564008f,    -0.21571361f,
    0.00010481f,    -0.73475933f,    -0.06876343f,    -0.78040612f,
    -0.17434204f,    -0.66424173f,    1.26635313f,    -0.05358025f,
    0.05669428f,    0.09763467f,    0.29032421f,    -0.54573888f,
    -0.51047236f,    -0.16541608f,    -0.79929852f,    0.21917425f,
    -0.44758070f,    -0.20432571f,    -0.00110789f,    0.09182280f,
    -0.26327440f,    -0.15075168f,    0.31104743f,    0.53067750f,
    0.10738317f,    -0.58926111f,    0.00714115f,    -1.06095731f,
    0.63816631f,    -0.08769273f,    -2.18654847f,    -0.31546530f,
    0.12243754f,    -0.10230956f,    -0.55989397f,    -0.06965502f,
    0.15746121f,    -0.33940232f,    -0.66419399f,    -0.30866763f,
    -0.33479232f,    0.35189322f,    -0.11198081f,    -0.32538030f,
    -0.32790947f,    0.66658974f,    -0.07534280f,    -0.56299329f,
    -0.01211512f,    -0.05513772f,    -0.15666029f,    -0.16502677f,
    -0.11126475f,    -0.17084743f,    -0.25974354f,    -0.05290764f,
    -0.49499920f,    -0.02229172f,    -0.48533952f,    -0.21605764f,
    1.13342345f,    -0.00982415f,    -1.60979462f,    -0.11304669f,
    -0.52893895f,    0.22601819f,    0.54591799f,    -0.42590627f,
    -0.09519460f,    0.19513269f,    0.19279681f,    -0.14853798f,
    -0.34171727f,    -0.50573564f,    0.42608318f,    -0.20167233f,
    0.17752811f,    -0.58074254f,    -0.58095968f,    -0.38803652f

};

// dense_hidden3 bias (8)
static const float HIDDEN3_BIAS[] = {
    1.06406045f,    -0.33210406f,    -0.38667575f,    -0.95607126f,
    1.69623709f,    -0.10507543f,    2.84111094f,    -1.09928882f

};

// dense_output weights (8x1)
static const float OUTPUT_WEIGHTS[] = {
    -0.00040614f,    0.01510779f,    0.03346912f,    0.20712452f,
    -0.92055720f,    0.00537423f,    1.01519716f,    -0.11253703f

};

// dense_output bias (1)
static const float OUTPUT_BIAS[] = {
    -1.55720735f
};

// Neural Network Functions
void nn_forward(const float* input, float* output);
float nn_relu(float x);

#endif // NN_WEIGHTS_H
