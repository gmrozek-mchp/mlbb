// ******************************************************************
// Neural Network Weights and Biases
// Generated from trained Keras model
// ******************************************************************

#ifndef NN_WEIGHTS_H
#define NN_WEIGHTS_H

#include <stdint.h>
// ARM math types removed for compatibility

// Network Architecture
#define NN_INPUT_SIZE 4
#define NN_INPUT_OUTPUT_SIZE 4
#define NN_HIDDEN1_SIZE 24
#define NN_HIDDEN2_SIZE 12
#define NN_HIDDEN3_SIZE 8
#define NN_OUTPUT_SIZE 2

// dense_input weights (4x4)
static const float INPUT_WEIGHTS[] = {
    0.17284575f,    -0.40748593f,    0.19925492f,    0.11638615f,
    -1.03538680f,    -0.66339231f,    3.18949342f,    0.04960290f,
    -0.45154354f,    0.32622573f,    -0.11550329f,    0.24351378f,
    -2.03955984f,    -2.02644730f,    -2.09917235f,    -0.42776069f

};

// dense_input bias (4)
static const float INPUT_BIAS[] = {
    -6.28821850f,    -7.89822292f,    -0.54400688f,    24.69145966f

};

// dense_hidden1 weights (4x24)
static const float HIDDEN1_WEIGHTS[] = {
    0.03446015f,    0.24307469f,    1.67456794f,    0.71245849f,
    1.30162394f,    0.58127737f,    0.74851489f,    1.83113182f,
    -1.43741953f,    -0.39647585f,    0.99523592f,    0.03280756f,
    0.18083626f,    0.64380324f,    -0.17895404f,    0.22054841f,
    1.18628561f,    0.59377557f,    -0.17590201f,    0.40146291f,
    -0.37465784f,    1.22067523f,    0.83419377f,    0.03450969f,
    1.62755537f,    0.43031326f,    -0.06940049f,    -1.35864854f,
    -1.55642474f,    -0.02845032f,    0.40765354f,    -1.90848410f,
    0.95576036f,    0.84121633f,    -0.50872213f,    0.18875569f,
    0.11706728f,    0.33170897f,    0.21117438f,    1.07558572f,
    -1.60927749f,    -0.52330250f,    0.63516194f,    0.87548679f,
    0.81064069f,    -0.89575440f,    1.68167961f,    -0.44814771f,
    0.20465399f,    -0.46489429f,    -0.85368538f,    -0.37236872f,
    0.33244714f,    -0.08110232f,    0.43217233f,    -0.48353016f,
    -0.30728105f,    0.40265310f,    -0.14749500f,    -1.11186242f,
    1.30867505f,    0.36068061f,    0.32526550f,    -0.85370868f,
    -0.10688111f,    1.00473845f,    -0.25496137f,    -0.32310200f,
    0.74571365f,    0.62900919f,    -0.09312479f,    0.99093598f,
    0.27622309f,    0.08229996f,    0.21073857f,    -1.93493354f,
    -1.13237596f,    -0.05327855f,    0.37956825f,    -1.26424503f,
    0.93561661f,    -0.39457494f,    0.60540915f,    0.32432595f,
    0.69268924f,    -1.05202603f,    -1.31749189f,    -1.40692687f,
    -1.79225671f,    -0.90762198f,    0.88075852f,    -1.42430234f,
    0.23283032f,    -1.53681540f,    0.19943428f,    0.93819392f

};

// dense_hidden1 bias (24)
static const float HIDDEN1_BIAS[] = {
    -40.26428223f,    22.80449867f,    -1.59097636f,    -56.25602722f,
    -14.20810127f,    -60.22835541f,    -13.94381714f,    -0.08403961f,
    20.38786125f,    -53.70368958f,    26.31632423f,    -16.48778725f,
    19.93566704f,    26.18332100f,    37.14163589f,    -13.05821800f,
    28.12685394f,    37.90826797f,    23.72265053f,    16.17844963f,
    -29.49717712f,    -22.52405739f,    -10.97408867f,    -27.21693420f

};

// dense_hidden2 weights (24x12)
static const float HIDDEN2_WEIGHTS[] = {
    -0.16358188f,    -0.84723765f,    -1.45875883f,    0.95249772f,
    0.71549541f,    0.51330775f,    -3.96961331f,    -0.46284184f,
    0.00246705f,    0.30876914f,    -1.59075856f,    0.54302621f,
    -0.16383843f,    -0.42233121f,    -0.45214823f,    -1.48885274f,
    0.52027196f,    0.87396914f,    1.10134530f,    -0.23787786f,
    0.83424526f,    -7.69670725f,    1.66632557f,    -1.29736984f,
    -0.38145995f,    1.34840298f,    0.18219393f,    1.43169641f,
    0.74192345f,    0.56336862f,    -0.60191470f,    0.15298952f,
    0.72432327f,    2.13494492f,    -2.07850242f,    -0.01740110f,
    -0.41444865f,    -2.02618456f,    -2.22604275f,    -4.42131710f,
    -1.70813465f,    -0.02286852f,    0.82547998f,    -0.15075804f,
    -3.24005723f,    0.55374932f,    0.26776996f,    -2.59854221f,
    -0.04848057f,    -0.78277767f,    0.27915889f,    1.21896303f,
    -5.71538591f,    -4.23465538f,    -1.13282979f,    0.28114161f,
    -3.16795015f,    0.10014475f,    -0.47548035f,    -1.65865397f,
    0.10941330f,    -0.82311708f,    -0.86836672f,    -2.11880350f,
    -0.65335178f,    -2.42121935f,    -0.75752902f,    0.16871658f,
    -7.20215988f,    0.74861240f,    -2.41811347f,    -2.23158503f,
    -0.19258009f,    -2.67133141f,    0.42570770f,    0.42965516f,
    -1.21845174f,    0.67539889f,    -2.19962573f,    -0.12185756f,
    1.36639178f,    0.70874912f,    -0.45173985f,    -0.55798650f,
    -0.18181433f,    1.47112465f,    -0.41915709f,    -4.64529037f,
    -2.29682112f,    -1.39925480f,    1.07571793f,    -0.60965908f,
    -2.17103672f,    -2.84253693f,    0.00241983f,    1.03595710f,
    -0.15888977f,    -1.02851844f,    0.92909098f,    0.83988661f,
    0.99165797f,    -1.44915426f,    -1.39840841f,    -0.09387291f,
    0.84430784f,    1.60961425f,    -2.06105447f,    1.59470451f,
    -0.13963719f,    -1.14737856f,    -3.69968748f,    -0.82341731f,
    0.40615383f,    0.81629544f,    0.60477102f,    -0.13095836f,
    -0.33593440f,    -5.72723150f,    -1.99945092f,    -1.76658487f,
    -0.17077392f,    0.94912106f,    1.09778798f,    -0.69229871f,
    0.27818242f,    -0.94228089f,    1.07884932f,    -0.18365401f,
    -0.15605655f,    -4.39235115f,    0.47578171f,    1.95820820f,
    -0.64415967f,    0.12926036f,    -0.97735494f,    1.87549770f,
    -0.60452759f,    -0.01537239f,    0.64326793f,    -0.51179516f,
    0.37654603f,    -5.22711658f,    0.23312694f,    -0.10231329f,
    -0.42588788f,    3.21251822f,    0.28869367f,    -1.03414881f,
    2.39986610f,    0.78870887f,    1.35270619f,    -0.51097512f,
    -0.04503604f,    0.31266806f,    0.18600923f,    0.50589639f,
    0.00224557f,    -0.38639677f,    0.74101943f,    -0.47559598f,
    -0.45887151f,    -0.55625039f,    -3.20099497f,    0.26444232f,
    1.47425807f,    0.60652936f,    1.04148984f,    -3.84821105f,
    0.06105429f,    3.53376293f,    -1.82390344f,    -2.48498154f,
    -0.16224819f,    1.56629872f,    2.53805375f,    -0.63534540f,
    -0.87593693f,    -0.99032378f,    0.35104200f,    0.05822885f,
    -0.46683699f,    -0.94488460f,    0.43926221f,    -0.00138204f,
    -1.04198694f,    -1.27182579f,    -0.95887053f,    -0.13886464f,
    0.09118841f,    0.21665244f,    -2.70579934f,    1.42192507f,
    -0.25302193f,    1.57391608f,    1.61828399f,    3.06138158f,
    1.52078879f,    0.06639600f,    1.61648107f,    -0.18604425f,
    2.00923991f,    2.53488445f,    2.68195248f,    1.23297274f,
    -0.40197515f,    -0.88530546f,    2.00470877f,    1.14831936f,
    1.81397891f,    -0.82124960f,    -2.13755774f,    -0.12127393f,
    1.87877381f,    -0.22938648f,    0.59202194f,    1.03249276f,
    -0.60756290f,    -0.31898087f,    0.08829875f,    1.47837913f,
    0.97339267f,    0.38922516f,    -0.78090966f,    -0.33467025f,
    1.14055622f,    -6.55677605f,    1.32373011f,    -1.79461300f,
    0.01601778f,    1.66180468f,    -0.80269396f,    0.46779454f,
    0.38634279f,    -0.48230118f,    -0.56624037f,    -0.33624330f,
    -0.55045038f,    -2.67487669f,    -1.06757092f,    -2.16390634f,
    -0.23193987f,    -1.44032645f,    -1.47774768f,    -0.84768701f,
    0.12652533f,    0.97048193f,    -2.75949168f,    -0.49571162f,
    -0.11651148f,    -0.06119088f,    -1.79267478f,    -3.30409312f,
    0.18054566f,    -0.95357996f,    0.03995783f,    1.69687045f,
    -5.26562786f,    -1.98616314f,    -1.08499110f,    -0.47812900f,
    -5.98442698f,    0.86094815f,    -1.16163218f,    0.42071590f,
    -0.23018368f,    -1.52945995f,    0.84415400f,    -2.31815720f,
    -0.62286419f,    0.88538265f,    2.37655401f,    -0.10486498f,
    0.71396363f,    0.80887878f,    2.04928565f,    0.14301303f,
    -0.41036680f,    -2.75760579f,    -0.61026675f,    -0.22831258f,
    -0.59555018f,    1.05217659f,    -0.85199887f,    -0.17047055f,
    -0.49225774f,    1.11788750f,    0.35161352f,    -0.80919534f

};

// dense_hidden2 bias (12)
static const float HIDDEN2_BIAS[] = {
    -0.43359232f,    23.42539787f,    9.22446918f,    16.82320976f,
    17.03252220f,    -8.29636097f,    -3.36595297f,    -0.42215285f,
    26.86197090f,    10.52789021f,    29.70893478f,    11.31883049f

};

// dense_hidden3 weights (12x8)
static const float HIDDEN3_WEIGHTS[] = {
    -0.24656361f,    0.18250810f,    0.11308244f,    -0.51099402f,
    -0.00941742f,    -0.10476678f,    0.52497888f,    0.17585540f,
    -1.53011739f,    -0.93131548f,    0.48727393f,    0.11362674f,
    -2.63529944f,    -0.63997537f,    0.59635359f,    -0.84977716f,
    -1.11813653f,    -0.05565917f,    0.95176923f,    -2.07769561f,
    -0.90457779f,    -3.47289371f,    0.25831646f,    1.47819912f,
    0.37005749f,    1.68011415f,    0.86277294f,    2.00093007f,
    0.81194705f,    0.11485880f,    -0.48648086f,    0.26571438f,
    0.20788485f,    1.48403978f,    -0.66896999f,    -2.65573096f,
    0.31951883f,    -2.84504890f,    -1.32088947f,    -1.93186235f,
    -4.32350254f,    1.45904291f,    2.01522517f,    0.44923490f,
    -0.23967117f,    -3.10303164f,    -0.81267041f,    1.81988215f,
    1.64050341f,    -0.40197012f,    -1.23780048f,    1.12633634f,
    1.96840584f,    -5.94917154f,    1.03672338f,    -2.94401121f,
    -0.12389211f,    -0.33219963f,    0.29392591f,    -0.23126343f,
    -0.18519750f,    0.23840137f,    0.16241181f,    0.39115584f,
    -0.07535003f,    -3.20391250f,    0.27395466f,    0.93415648f,
    -0.19008711f,    0.18510672f,    1.86053014f,    -0.17483200f,
    0.60659492f,    2.59156871f,    0.69492447f,    0.05444798f,
    1.16103268f,    1.62447107f,    -8.51285648f,    -0.04834904f,
    0.72398710f,    0.75803709f,    -0.36447588f,    -1.79873490f,
    -0.77703577f,    -2.69110441f,    -1.36216521f,    -3.22131729f,
    0.80117399f,    0.97179121f,    -1.13974440f,    -0.00869798f,
    3.80341935f,    -2.66658545f,    -1.43745124f,    -3.61496568f

};

// dense_hidden3 bias (8)
static const float HIDDEN3_BIAS[] = {
    8.07074451f,    -3.39559579f,    19.47271347f,    6.77914286f,
    6.46419954f,    -15.52983952f,    13.99930477f,    14.21852016f

};

// dense_output weights (8x2)
static const float OUTPUT_WEIGHTS[] = {
    0.03295612f,    0.65723813f,    1.01830387f,    0.10230485f,
    -0.02689689f,    -0.60295761f,    -0.79512823f,    0.11233369f,
    0.01331626f,    0.69509143f,    -1.60732698f,    -0.64901960f,
    -0.80140072f,    -0.00102038f,    -0.23885734f,    -1.51584888f

};

// dense_output bias (2)
static const float OUTPUT_BIAS[] = {
    -21.11792183f,    -0.00033488f
};

// Neural Network Functions
void nn_forward(const float* input, float* output);
float nn_relu(float x);

#endif // NN_WEIGHTS_H
