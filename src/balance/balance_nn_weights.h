// ******************************************************************
// Neural Network Weights and Biases
// Generated from trained Keras model
// ******************************************************************

#ifndef NN_WEIGHTS_H
#define NN_WEIGHTS_H

#include <stdint.h>
#include <arm_math_types.h>

// Network Architecture
#define NN_INPUT_SIZE 6
#define NN_HIDDEN1_SIZE 12
#define NN_HIDDEN2_SIZE 12
#define NN_OUTPUT_SIZE 3

// dense_input weights (6x6)
static const float INPUT_WEIGHTS[] = {
    -1.55024457f,    0.09536474f,    -0.18840870f,    0.68560731f,
    -0.39653310f,    1.34222972f,    -1.44460094f,    2.30967975f,
    0.24747284f,    -0.36660427f,    -1.63271296f,    0.68305594f,
    0.50946587f,    0.60392779f,    -0.62062651f,    -0.60988879f,
    0.28630906f,    0.63197154f,    0.29838982f,    -0.48376688f,
    0.24484967f,    0.07860267f,    -0.08110826f,    0.31217626f,
    -5.33907509f,    -2.30074167f,    3.37804294f,    6.20120430f,
    3.38352418f,    6.24751425f,    -2.77725601f,    3.78607249f,
    -2.24642611f,    -2.07830095f,    -3.68477011f,    -2.76642609f

};

// dense_input bias (6)
static const float INPUT_BIAS[] = {
    0.04186125f,    -0.02558502f,    0.01265459f,    -0.03102759f,
    0.03219331f,    0.09206486f
};

// dense_hidden_1 weights (6x12)
static const float HIDDEN_1_WEIGHTS[] = {
    -0.13533491f,    0.41558981f,    0.27321884f,    -0.11116628f,
    -0.20436974f,    0.01860364f,    0.13367842f,    0.49512047f,
    -0.37812942f,    -0.09018888f,    0.04331130f,    -0.48406112f,
    -0.23075272f,    -0.17086208f,    0.36596695f,    -0.10091615f,
    0.43745717f,    -0.84398997f,    0.27042866f,    0.01342248f,
    0.44216087f,    0.37056980f,    0.02623103f,    0.59591889f,
    0.45801485f,    -0.37079084f,    -0.15073475f,    -0.06280865f,
    -0.05781293f,    -0.22764471f,    -0.18494384f,    0.36626524f,
    0.33647677f,    -0.61131597f,    0.37009063f,    0.12114127f,
    0.09314771f,    -0.17642660f,    -0.06422365f,    -0.09004737f,
    -0.01034811f,    -0.23984230f,    -0.31622735f,    -0.17946042f,
    -0.09791806f,    0.13351123f,    0.55510795f,    -0.13656229f,
    0.33897501f,    -0.20523182f,    -0.18905896f,    -0.94744128f,
    -0.20913853f,    0.16406316f,    -0.42488644f,    0.11769251f,
    -0.59876978f,    0.35172370f,    -0.13656449f,    -0.46985251f,
    0.15165281f,    -0.55109674f,    -0.16844377f,    0.75397509f,
    -0.13784303f,    0.57384139f,    -0.54885674f,    -0.30307576f,
    0.16916971f,    -0.28671399f,    0.35737473f,    0.99258244f

};

// dense_hidden_1 bias (12)
static const float HIDDEN_1_BIAS[] = {
    0.04341159f,    -0.06059899f,    0.00604841f,    -0.02796894f,
    -0.03710022f,    0.06690162f,    -0.06900331f,    -0.06358586f,
    -0.01303947f,    -0.04313831f,    -0.10238790f,    -0.02329721f

};

// dense_hidden_2 weights (12x12)
static const float HIDDEN_2_WEIGHTS[] = {
    0.40906036f,    -0.16997722f,    0.11061826f,    -0.29626995f,
    0.10814083f,    -0.26039636f,    -0.50067604f,    -0.16737926f,
    -0.41907808f,    -0.52732283f,    -0.30333132f,    -0.29071552f,
    0.57317674f,    0.16712165f,    -0.46619481f,    0.34155440f,
    0.40305987f,    -0.86399519f,    -0.18427818f,    -0.50934273f,
    0.31357554f,    0.44516379f,    0.12820557f,    -0.04361297f,
    0.07749841f,    0.29659021f,    0.04528271f,    -0.02305864f,
    -0.27406201f,    0.25973919f,    -0.10257120f,    -0.04247570f,
    -0.04709930f,    -0.19243848f,    0.43862066f,    0.00912549f,
    -0.34377503f,    0.40208206f,    -0.79607356f,    -0.40082073f,
    0.20793374f,    0.70117617f,    -0.07342721f,    -0.13080116f,
    -0.47326583f,    0.03230057f,    0.26381731f,    -0.23361649f,
    -0.09471639f,    -0.27886891f,    0.20856100f,    0.16981490f,
    0.10884871f,    -0.02827699f,    -1.69835258f,    0.32121307f,
    0.22680515f,    0.41849762f,    0.10103904f,    -0.65814191f,
    -0.48793408f,    -0.48356405f,    0.33144334f,    -0.80824137f,
    -0.14977340f,    -0.47811496f,    -0.30843639f,    0.25472939f,
    0.40799186f,    0.23889905f,    -0.03802976f,    0.47938302f,
    -0.09817445f,    -0.18682325f,    0.49173826f,    -0.09112778f,
    -0.90824318f,    0.57037252f,    -0.76345754f,    0.11222296f,
    -0.12237519f,    0.42419562f,    0.64706868f,    0.69428724f,
    -0.66681308f,    -0.40964684f,    0.12195873f,    0.01598149f,
    0.22165993f,    0.38778162f,    0.34828380f,    -0.53157002f,
    0.22024608f,    -0.00709718f,    0.23292565f,    -0.23124132f,
    0.22946158f,    -0.37969613f,    -0.34140110f,    0.39047199f,
    -0.11384366f,    -0.14060058f,    0.74837893f,    -0.20985729f,
    -0.20106587f,    -0.20814668f,    0.33446088f,    0.40810913f,
    0.64047348f,    -0.33762726f,    -0.14344144f,    0.04336963f,
    -0.60715538f,    -0.37666914f,    0.48772597f,    -0.42528713f,
    -0.09455729f,    0.41991705f,    0.13151513f,    0.00397059f,
    -0.21813191f,    -0.08496559f,    -1.00263345f,    -0.70989925f,
    0.16644435f,    -0.40596205f,    -0.30530381f,    0.07499742f,
    -0.47428656f,    0.60567123f,    0.03988980f,    -0.68324286f,
    -0.26635385f,    -0.02256341f,    -0.84271097f,    -0.39598754f,
    -0.25473025f,    0.23069258f,    0.51852530f,    -0.14228816f,
    0.41258982f,    0.32460338f,    0.21862355f,    0.15573591f

};

// dense_hidden_2 bias (12)
static const float HIDDEN_2_BIAS[] = {
    -0.03520419f,    -0.00623205f,    0.01143404f,    0.02405084f,
    0.02037575f,    0.08805081f,    -0.03513515f,    0.05002536f,
    0.09760653f,    -0.01740442f,    -0.01655726f,    -0.05445722f

};

// dense_output weights (12x3)
static const float OUTPUT_WEIGHTS[] = {
    -0.03166994f,    -0.09649353f,    0.52447504f,    0.51990998f,
    -0.60986125f,    0.13157235f,    0.17982353f,    0.43727630f,
    -0.13491590f,    0.36755490f,    -0.44357038f,    0.29897058f,
    1.00779557f,    0.29450434f,    -1.19790852f,    0.17349681f,
    0.58799356f,    -0.66501492f,    -0.32391202f,    -1.00722682f,
    1.27732694f,    -0.24762057f,    0.09433778f,    -0.29620916f,
    0.58453190f,    -0.09056697f,    0.01714240f,    -0.58921534f,
    0.06917790f,    0.16958612f,    0.40834391f,    0.13239639f,
    -0.59643769f,    -0.43840268f,    -0.31400394f,    0.75099963f

};

// dense_output bias (3)
static const float OUTPUT_BIAS[] = {
    -0.07033586f,    -0.00636971f,    0.02371639f
};

// Neural Network Functions
// Note: Implementation moved to balance_nn.c
void nn_forward(const float* input, float* output);
float nn_relu(float x);

#endif // NN_WEIGHTS_H
