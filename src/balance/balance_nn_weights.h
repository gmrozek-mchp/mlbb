// ******************************************************************
// Neural Network Weights and Biases
// Generated from trained Keras model
// ******************************************************************

#ifndef NN_WEIGHTS_H
#define NN_WEIGHTS_H

#include <stdint.h>
// ARM math types removed for compatibility

// Network Architecture
#define NN_INPUT_SIZE 4
#define NN_INPUT_OUTPUT_SIZE 4
#define NN_HIDDEN1_SIZE 24
#define NN_HIDDEN2_SIZE 12
#define NN_HIDDEN3_SIZE 8
#define NN_OUTPUT_SIZE 2

// dense_input weights (4x4)
static const float INPUT_WEIGHTS[] = {
    0.18010056f,    0.64144450f,    0.20301932f,    0.34691429f,
    -3.13100076f,    2.27178383f,    -0.39194497f,    -0.09744017f,
    0.13237922f,    0.04956434f,    -0.71820980f,    -0.41626900f,
    1.42851508f,    1.01146710f,    1.65483165f,    -3.68074417f

};

// dense_input bias (4)
static const float INPUT_BIAS[] = {
    11.35144520f,    4.42201614f,    3.05508685f,    2.23197794f

};

// dense_hidden1 weights (4x24)
static const float HIDDEN1_WEIGHTS[] = {
    1.05329716f,    0.05565597f,    0.88088638f,    -1.60834086f,
    -0.11374189f,    0.14426821f,    0.21241544f,    -0.78061718f,
    -1.65554559f,    -0.47166470f,    0.45040813f,    -0.64184785f,
    -0.40176970f,    1.09545720f,    -0.36682534f,    -0.01357824f,
    -0.72253954f,    0.27731761f,    -1.19241810f,    0.54810417f,
    -1.14538693f,    -0.39654946f,    -0.15236071f,    0.67591149f,
    -0.33895949f,    0.52076298f,    0.39875582f,    -0.56479043f,
    0.00175572f,    -1.15366209f,    -0.27759007f,    -0.69176954f,
    0.38313103f,    -1.03024590f,    -0.98835599f,    0.55833811f,
    0.03880742f,    0.13939957f,    -1.59755611f,    1.36078227f,
    -1.41572630f,    -0.06535581f,    -1.19007146f,    0.03681272f,
    -0.49486905f,    1.35663140f,    -0.19396795f,    0.27211002f,
    -0.04974823f,    -0.91752678f,    -1.08689988f,    -0.65007997f,
    0.68745679f,    -0.95787984f,    -0.14700355f,    0.98614800f,
    0.28194356f,    -1.51464939f,    -0.36950120f,    1.03018749f,
    1.08293629f,    0.79833615f,    -0.12604062f,    -0.45097223f,
    0.60656232f,    1.37248325f,    0.16745186f,    -1.07061005f,
    -1.66449034f,    -0.41008750f,    -1.45357502f,    -0.68335229f,
    0.30663478f,    0.97562724f,    0.64568168f,    -1.46867180f,
    0.26750886f,    0.12293625f,    -0.57548273f,    -0.23641445f,
    1.24966574f,    -1.91118371f,    0.64952344f,    -0.65160793f,
    0.19841301f,    0.36268145f,    0.07127628f,    -0.58206016f,
    0.88763249f,    -0.09127970f,    -0.70041841f,    0.01912310f,
    -0.27044994f,    0.49716190f,    -0.12267150f,    -0.52334398f

};

// dense_hidden1 bias (24)
static const float HIDDEN1_BIAS[] = {
    19.76552582f,    -9.92325020f,    10.28693962f,    -17.87698746f,
    -17.76738358f,    -12.08900642f,    10.76679516f,    4.76486683f,
    3.96980357f,    -0.25815314f,    -1.04187036f,    -10.23411942f,
    -5.58986425f,    -9.61993694f,    -13.08996487f,    14.96349812f,
    19.84745598f,    -21.47781944f,    -1.31628692f,    3.42625332f,
    -27.81766891f,    -3.13038993f,    -28.43544006f,    21.44909477f

};

// dense_hidden2 weights (24x12)
static const float HIDDEN2_WEIGHTS[] = {
    1.20094335f,    -0.10956866f,    -0.19823474f,    -1.22780788f,
    0.97155982f,    -0.20177346f,    0.63538849f,    -0.60087001f,
    0.85449302f,    0.69236523f,    -0.60770833f,    -0.01948104f,
    0.27524972f,    0.29426441f,    -0.28304720f,    -1.26839232f,
    -2.52639246f,    0.69403183f,    0.46992654f,    -0.20484288f,
    -0.79293960f,    0.70834339f,    0.25164071f,    0.19127102f,
    0.70656061f,    -0.93597096f,    -0.41315746f,    -0.60227638f,
    0.83765650f,    -1.43524754f,    -0.90273994f,    -0.43607891f,
    0.44278246f,    0.57014537f,    1.46917069f,    -0.38967630f,
    -0.54799992f,    0.09355536f,    -0.38560748f,    -0.91966182f,
    -0.93038654f,    -2.61442208f,    -2.18866873f,    -0.33412749f,
    0.85633981f,    -0.17142347f,    -0.84328371f,    -0.29100093f,
    -1.13246346f,    0.02351287f,    0.02366378f,    -1.14063954f,
    -0.02024437f,    0.30532882f,    -0.23539610f,    -0.65010488f,
    -2.02401853f,    -2.17420030f,    0.03090600f,    -0.35665056f,
    -0.36527032f,    -0.23697568f,    -0.97923434f,    0.26053891f,
    0.55033177f,    1.88051200f,    -1.14955389f,    -0.29924494f,
    -0.21249250f,    0.64517117f,    -1.75433958f,    -0.26587304f,
    -1.38107252f,    -0.39593756f,    -0.33354551f,    -0.15164657f,
    0.16214441f,    0.16294779f,    1.07310939f,    -0.34363967f,
    0.31556526f,    0.11519307f,    0.47885871f,    0.11403615f,
    1.16509008f,    -0.15236098f,    -0.67137671f,    1.01004732f,
    1.16946316f,    -0.26127711f,    0.53930551f,    -0.65477735f,
    1.00907767f,    2.32504845f,    0.87163037f,    0.21481769f,
    -0.61111164f,    -0.27642944f,    0.19800207f,    -2.39460301f,
    -0.11137956f,    0.69185960f,    0.15642340f,    -0.41116804f,
    -1.51585352f,    0.35482454f,    -3.22086763f,    -0.31492767f,
    -3.62895393f,    -0.64164621f,    0.08363158f,    -0.23616323f,
    0.86565423f,    0.24825133f,    -0.27155909f,    -0.33914435f,
    0.66804111f,    -1.54210663f,    -0.64509946f,    -0.06049364f,
    0.78091639f,    0.10352291f,    -0.27828306f,    -1.73292398f,
    0.42818841f,    0.19868690f,    0.68506205f,    0.00790208f,
    -0.17500328f,    0.66628021f,    1.91766846f,    -0.08186603f,
    0.59597069f,    -0.08552971f,    -0.31842941f,    0.54188192f,
    -2.59943533f,    0.20686078f,    -0.28315923f,    -0.49024215f,
    -1.17027771f,    -3.62905788f,    1.23894489f,    -0.35552365f,
    0.34168616f,    -0.16012533f,    -0.22584507f,    -0.68974960f,
    0.45350364f,    0.43143743f,    -0.10975052f,    0.14521810f,
    0.64544296f,    -2.94451189f,    -0.34771580f,    0.18307945f,
    -0.80511171f,    -0.61410451f,    -0.72218454f,    -0.24388491f,
    -3.36698651f,    -0.60184896f,    0.31014386f,    0.06238613f,
    0.04559496f,    0.30874461f,    0.33290809f,    -0.19038944f,
    -0.63613880f,    0.02127914f,    -0.47253558f,    -0.09010661f,
    0.35922837f,    -0.76891083f,    0.31108394f,    -0.08529881f,
    -1.33523250f,    -1.02067709f,    0.10866148f,    -0.12621491f,
    0.39790016f,    -0.71613693f,    -0.65882152f,    0.31767225f,
    -2.32372570f,    1.02335691f,    -0.59932351f,    -0.51873803f,
    0.75203061f,    -0.99633807f,    -0.78838676f,    0.00377291f,
    -0.90645248f,    -0.44566989f,    -0.74050534f,    -0.29526055f,
    -0.27999866f,    0.10931316f,    0.82920706f,    -0.12526280f,
    -1.11001468f,    -1.42907155f,    -1.68456376f,    -0.21082625f,
    0.18866004f,    -0.03548962f,    -1.00747955f,    0.96198773f,
    -1.79704380f,    -0.40858752f,    -0.56448370f,    -0.34955931f,
    -3.09047651f,    0.60233909f,    0.16893759f,    -0.08266756f,
    1.30617714f,    -0.15081632f,    -0.34426448f,    0.98862427f,
    -0.08351663f,    0.83316243f,    0.90015268f,    -0.36143470f,
    -0.47024158f,    1.14587200f,    -0.17885369f,    -0.02124195f,
    0.37844718f,    -0.46437001f,    0.07703824f,    -1.21142006f,
    0.04147957f,    -1.65395832f,    -2.19747734f,    0.18126193f,
    0.19747236f,    0.15593836f,    0.50870520f,    0.10143413f,
    -0.59101653f,    0.08625173f,    -0.00432893f,    1.00350142f,
    -0.75133073f,    -2.72065067f,    -1.33760917f,    -0.47340167f,
    -0.39947578f,    0.89794272f,    -3.34679031f,    -0.24197242f,
    -0.48761269f,    -0.19640972f,    0.11741637f,    -0.41686413f,
    1.30820763f,    0.43134946f,    0.60054618f,    -0.43687406f,
    -1.05358529f,    -0.45203152f,    -1.96199083f,    0.02483241f,
    0.35999992f,    0.14034693f,    -0.81972939f,    -1.45438802f,
    0.33250669f,    -2.10824895f,    -3.14662099f,    -0.47443819f,
    -0.80553591f,    0.57291281f,    -1.60849059f,    -0.34677079f,
    0.29061472f,    -0.56378251f,    -0.32166064f,    -0.30798930f,
    0.22309637f,    0.60439694f,    -2.29134011f,    -0.50914025f,
    0.55677438f,    -1.39996147f,    0.62266928f,    -0.11319876f

};

// dense_hidden2 bias (12)
static const float HIDDEN2_BIAS[] = {
    22.50239563f,    -1.49321902f,    -0.15709013f,    6.23416853f,
    6.64827394f,    1.13118029f,    20.99690056f,    -0.82848489f,
    18.38117981f,    -2.19280338f,    -0.26796830f,    -0.13757291f

};

// dense_hidden3 weights (12x8)
static const float HIDDEN3_WEIGHTS[] = {
    -0.93926531f,    -5.32045698f,    -0.29290345f,    -0.41591731f,
    -1.09458137f,    0.69887495f,    -0.57572103f,    0.49286950f,
    -0.12327909f,    0.34106928f,    0.43654311f,    0.28879693f,
    -0.32335168f,    -0.47398254f,    -0.41465825f,    -0.22279973f,
    -0.11074397f,    0.35294750f,    0.56737804f,    0.36771542f,
    0.14189933f,    -0.20279422f,    0.57181299f,    0.60452956f,
    -3.93312788f,    -1.27416825f,    0.76555908f,    -0.06656067f,
    -2.57511568f,    0.39966699f,    -0.08639354f,    0.18262288f,
    0.74481118f,    -2.63916111f,    -0.08616388f,    -0.89524829f,
    -0.85196501f,    -0.03123520f,    0.05455340f,    -0.21065208f,
    0.01055184f,    0.42586881f,    0.27682129f,    -0.03401101f,
    1.29633558f,    0.97343546f,    -0.00967626f,    1.05172956f,
    0.11675151f,    0.05219659f,    0.06851161f,    -0.11217380f,
    0.09242978f,    -1.11638594f,    0.57002515f,    -1.09659028f,
    -0.16036731f,    -0.18136989f,    0.31615901f,    -0.26901075f,
    0.57531631f,    0.51671958f,    0.19906385f,    0.08463284f,
    0.06761459f,    -1.16074479f,    -2.89123225f,    -0.13778764f,
    -2.15595675f,    -1.24392104f,    -1.52187026f,    0.98367578f,
    0.02130869f,    1.25761855f,    0.61560982f,    -0.33040953f,
    1.07441902f,    -2.17191219f,    1.48595011f,    -0.75330013f,
    2.24756098f,    -3.19420528f,    1.38815534f,    -0.42046526f,
    -1.97782695f,    1.13022339f,    0.14203584f,    -0.30931899f,
    -0.24991447f,    -0.39345726f,    0.16026381f,    0.09863773f,
    0.20934260f,    -0.10130251f,    0.47361314f,    -0.17283651f

};

// dense_hidden3 bias (8)
static const float HIDDEN3_BIAS[] = {
    -12.58463764f,    6.20496845f,    -0.10697770f,    -1.81591976f,
    0.73805940f,    11.35334587f,    9.90482521f,    14.76791573f

};

// dense_output weights (8x2)
static const float OUTPUT_WEIGHTS[] = {
    -1.04534876f,    0.07817069f,    1.17737889f,    -0.23561504f,
    -1.04957771f,    0.31258780f,    0.02949079f,    0.18424542f,
    0.30437735f,    -1.14657104f,    1.11485386f,    0.50750226f,
    -0.65044188f,    -0.44873366f,    0.08972774f,    1.01430500f

};

// dense_output bias (2)
static const float OUTPUT_BIAS[] = {
    1.86217487f,    2.44275641f
};

// Neural Network Functions
void nn_forward(const float* input, float* output);
float nn_relu(float x);

#endif // NN_WEIGHTS_H
